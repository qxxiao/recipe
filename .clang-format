# https://clang.llvm.org/docs/ClangFormatStyleOptions.html
---
Language: Cpp
# BasedOnStyle: LLVM
AccessModifierOffset: -4 # -2
Standard: Cpp11
TabWidth: 4
IndentWidth: 4
UseTab: Never
UseCRLF: false
# 每行字符的限制，0表示没有限制
ColumnLimit: 80

# 大括号换行，只有当BreakBeforeBraces设置为Custom时才有效
BraceWrapping:
  AfterClass: false
  AfterCaseLabel: false
  AfterControlStatement: false
  AfterEnum: false
  AfterFunction: false
  AfterNamespace: false
  AfterObjCDeclaration: false # true
  AfterStruct: false
  AfterUnion: false
  AfterExternBlock: true
  BeforeCatch: true
  BeforeElse: true
  BeforeLambdaBody: false
  BeforeWhile: false
  IndentBraces: false # true
  # 仅当{换行/下一行， 即函数名后换行/class后换行才有效
  SplitEmptyFunction: false
  SplitEmptyRecord: false
  SplitEmptyNamespace: false

# Align
AlignAfterOpenBracket: true
# - 连续赋值语句的对齐
AlignConsecutiveAssignments: false
# - 连续声明的对齐 可能导致空格间距过大
AlignConsecutiveDeclarations: false
AlignEscapedNewlines: Right
AlignOperands: true
AlignTrailingComments: true
# - 但是会导致 A a = {2, {3, 4}};换行
AlignArrayOfStructures: Right

# 允许函数声明的所有参数在放在下一行
AllowAllParametersOfDeclarationOnNextLine: false
AllowShortBlocksOnASingleLine: true
AllowShortCaseLabelsOnASingleLine: true
AllowShortIfStatementsOnASingleLine: false
AllowShortLoopsOnASingleLine: false
# 允许短的函数放在同一行: None, InlineOnly(定义在类中), Empty(空函数), Inline(定义在类中，空函数), All
AllowShortFunctionsOnASingleLine: Empty
# 在定义返回类型后换行
AlwaysBreakAfterDefinitionReturnType: None
AlwaysBreakAfterReturnType: None
# 多行string字面量前换行
AlwaysBreakBeforeMultilineStrings: false
# 在template声明后换行
AlwaysBreakTemplateDeclarations: true # false
# false表示函数实参要么都在同一行，要么都各自一行
BinPackArguments: true
# false表示所有形参要么都在同一行，要么都各自一行
BinPackParameters: true

# - 在二元运算符前换行: None(在操作符后换行) NonAssignment(在操作符前换行，但不是赋值操作符) All(操作符前换行)
BreakBeforeBinaryOperators: NonAssignment
# - 在三元运算符前换行
BreakBeforeTernaryOperators: true
# - 自定义换行
BreakBeforeBraces: Custom
# - 继承类的换行
# BreakInheritanceList: AfterComma
# - 初始化列表换行方式 AfterColon(在冒号后换行) BeforeColon(在冒号前换行)
# BreakConstructorInitializers: AfterColon
# - java多行注解每个都换行
BreakAfterJavaFieldAnnotations: true
# - 运行字符串字面量换行
BreakStringLiterals: true

# 具有特殊意义的注释的正则表达式，它不应该被分割为多行或以其它方式改变
CommentPragmas: "^ pragma:"
CompactNamespaces: false
# 构造函数的初始化列表要么都在同一行，要么都各自一行
ConstructorInitializerAllOnOneLineOrOnePerLine: false
# 构造函数的初始化列表的缩进宽度
ConstructorInitializerIndentWidth: 4
# 延续的行的缩进宽度
ContinuationIndentWidth: 4
# 去除C++11的列表初始化的大括号{后和}前的空格
Cpp11BracedListStyle: true
# 继承 最常用的指针和引用的对齐方式
DerivePointerAlignment: false
# 关闭格式化
DisableFormat: false
# 自动检测函数的调用和定义是否被格式为每行一个参数
ExperimentalAutoDetectBinPacking: false
FixNamespaceComments: true
# 需要被解读为foreach循环而不是函数调用的宏
ForEachMacros:
  - foreach
  - Q_FOREACH
  - BOOST_FOREACH
# 划分和排序include
IncludeBlocks: Regroup # Preserve # Merge
# 定义负数优先级从而保证某些#include永远在最前面
IncludeCategories:
  - Regex: '^"(llvm|llvm-c|clang|clang-c)/'
    Priority: 2
  - Regex: '^(<|"(gtest|gmock|isl|json)/)'
    Priority: 3
  - Regex: ".*"
    Priority: 1
IncludeIsMainRegex: "(Test)?$"
# - 缩进case标签
IndentCaseLabels: true
# - 预处理器指令缩进样式
IndentPPDirectives: AfterHash

# 返回类型换行时，缩进函数声明或函数定义的函数名
IndentWrappedFunctionNames: false
# - js保留字符串引号 Single始终使用单引号,Double始终使用双引号。
JavaScriptQuotes: Leave
# - 包装JavaScript导入/导出语句
JavaScriptWrapImports: true
KeepEmptyLinesAtTheStartOfBlocks: true
MacroBlockBegin: ""
MacroBlockEnd: ""
MaxEmptyLinesToKeep: 1
# 命名空间的缩进: None, Inner(缩进嵌套的命名空间中的内容), All
NamespaceIndentation: None
# objc
ObjCBlockIndentWidth: 4
ObjCSpaceAfterProperty: false
ObjCSpaceBeforeProtocolList: true
# - 指针和引用的对齐
PointerAlignment: Left
# 原始字符串格式, R"pb()"
RawStringFormats:
  - Delimiters: [pb]
    Language: TextProto
    BasedOnStyle: google
# - 允许重新排版注释
ReflowComments: true
# - 允许排序#include
SortIncludes: true
SortUsingDeclarations: true

# add space
# 继承冒号前的空格
SpaceBeforeInheritanceColon: false
SpaceAfterCStyleCast: false
SpaceAfterTemplateKeyword: true
# - 赋值运算符之前添加空格
SpaceBeforeAssignmentOperators: true
# - 开圆括号之前添加一个空格: Never, ControlStatements, Always
SpaceBeforeParens: ControlStatements
# 尾随注释前添加的空格(只适用于//)
SpacesBeforeTrailingComments: 1
# 尖括号的<后和>前添加空格
SpacesInAngles: false
# 容器(ObjC和JavaScript的数组和字典等)字面量中添加空格
SpacesInContainerLiterals: true
SpacesInCStyleCastParentheses: false
SpaceInEmptyParentheses: false
# 括号内的空格
SpacesInParentheses: false
SpacesInSquareBrackets: false
InsertTrailingCommas: None
# - lambda表达式的缩进
LambdaBodyIndentation: Signature
